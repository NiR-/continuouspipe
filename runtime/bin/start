#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR=$DIR/../../
set -e

# Generates the .env file if not complete
command -v melody >/dev/null 2>&1 || {
    echo "This script requires Melody (melody.sensiolabs.org) to be installed."

    read -p "Do you want us to install it for you? " -n 1 -r
    echo    # (optional) move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        sudo sh -c "curl http://get.sensiolabs.org/melody.phar -o /usr/local/bin/melody && chmod a+x /usr/local/bin/melody"
    else
        exit 1
    fi
}

# If `.env` do not exists, create it
ENV_FILE_PATH=$ROOT_DIR/.env
if [ ! -f $ENV_FILE_PATH ]; then
    echo > $ENV_FILE_PATH
fi

echo "Creating the ngrok tunnel"
docker-compose up -d tunnel
NGROK_URL=$(php $DIR/wait-for.php tunnel)

echo
echo "   Ngrok tunnel is ready. Its URL is: "$NGROK_URL
echo

echo
echo "   Configuring the environment..."
echo

melody run $DIR/config.php

echo
echo "   Starting the remaining Docker containers."
echo "   ...and waiting for the API to be ready... it can take up to 15 minutes!"
echo "   (in the meantime, you can run 'docker-compose logs -f' in another terminal to follow the logs)"
echo

docker-compose up -d
php $DIR/wait-for.php api 60

if [ ! -d $ROOT_DIR/api/web/css ]; then
    echo
    echo "   Generating the front-end assets as they are not found."
    echo

    docker-compose run --rm api bash -c 'container symfony_console assetic:dump'
fi

echo
echo "   Everything seems to be ready."
echo "   - User interface: http://localhost"
echo "   - Admin: http://localhost:81/admin/"
echo
