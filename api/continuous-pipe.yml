pipelines:
    - name: Staging
      condition: code_reference.branch == 'master'
      tasks: [ images, migrations, deployment ]
    - name: Production
      condition: code_reference.branch == 'production'
      tasks: [ images, migrations, deployment ]
    - name: Pull-request CI
      condition: code_reference.branch not in ['master', 'production']
      tasks: [ images ]
    - name: Pre-staging environment
      condition: '"cp:tide" in pull_request.labels'
      tasks: [ images, deployment ]

variables:
    - name: BUILDER_URL
      condition: code_reference.branch == 'production'
      value: https://builder.continuouspipe.io
    - name: AUTHENTICATOR_URL
      condition: code_reference.branch == 'production'
      value: https://authenticator.continuouspipe.io
    - name: PIPE_URL
      condition: code_reference.branch == 'production'
      value: http://api.pipe-production.svc.cluster.local
    - name: RIVER_UI_URL
      condition: code_reference.branch == 'production'
      value: https://ui.continuouspipe.io
    - name: RIVER_HOST
      condition: code_reference.branch == 'production'
      value: river.continuouspipe.io
    - name: STACK_RABBITMQ_HOST
      condition: code_reference.branch == 'production'
      value: rabbitmq.stack-production.svc.cluster.local
    - name: GOOGLE_PUB_SUB_TOPIC
      condition: code_reference.branch == 'production'
      value: projects/continuous-pipe-1042/topics/production-river
    - name: GOOGLE_PUB_SUB_SUBSCRIPTION_NAME
      condition: code_reference.branch == 'production'
      value: projects/continuous-pipe-1042/subscriptions/production-river-worker

    - name: BUILDER_URL
      condition: code_reference.branch != 'production'
      value: https://builder-staging.continuouspipe.io
    - name: AUTHENTICATOR_URL
      condition: code_reference.branch != 'production'
      value: https://authenticator-staging.continuouspipe.io
    - name: PIPE_URL
      condition: code_reference.branch != 'production'
      value: http://api.pipe-master.svc.cluster.local
    - name: RIVER_UI_URL
      condition: code_reference.branch != 'production'
      value: https://ui-staging.continuouspipe.io
    - name: RIVER_HOST
      condition: code_reference.branch != 'production'
      value: river-staging.continuouspipe.io
    - name: STACK_RABBITMQ_HOST
      condition: code_reference.branch != 'production'
      value: rabbitmq.stack-master.svc.cluster.local
    - name: GOOGLE_PUB_SUB_TOPIC
      condition: code_reference.branch != 'production'
      value: projects/continuous-pipe-1042/topics/staging-river
    - name: GOOGLE_PUB_SUB_SUBSCRIPTION_NAME
      condition: code_reference.branch != 'production'
      value: projects/continuous-pipe-1042/subscriptions/staging-river-worker

tasks:
    images:
        build:
            environment:
                - name: GITHUB_TOKEN
                  value: ${GITHUB_TOKEN}

            services:
                api:
                    image: docker.io/inviqasession/cp-river

    deployment:
        deploy:
            cluster: ${CLUSTER}
            environment:
                name: '"river-" ~ code_reference.branch'

            services:
                rabbitmq:
                    locked: true

                    deployment_strategy:
                        readiness_probe:
                            type: tcp
                            port: 5672

                blackfire:
                    locked: true

                api:
                    endpoints:
                        -
                            name: https
                            type: NodePort
                            ssl_certificates:
                                -
                                    name: continuouspipeio
                                    cert: ${WILDCARD_SSL_CERT}
                                    key: ${WILDCARD_SSL_KEY}

                    specification:
                        environment_variables: &ENV
                            - name: AUTHENTICATOR_URL
                              value: ${AUTHENTICATOR_URL}
                            - name: LOGSTREAM_URL
                              value: https://api.logstream.continuouspipe.io
                            - name: LOGSTREAM_FRONTEND_URL
                              value: http://logstream.continuouspipe.io
                            - name: BUILDER_URL
                              value: ${BUILDER_URL}
                            - name: PIPE_URL
                              value: ${PIPE_URL}
                            - name: RIVER_UI_URL
                              value: ${RIVER_UI_URL}
                            - name: RIVER_HOST
                              value: ${RIVER_HOST}
                            - name: KEEN_PROJECT_ID
                              value: ${KEEN_PROJECT_ID}
                            - name: KEEN_WRITE_KEY
                              value: ${KEEN_WRITE_KEY}
                            - name: SENTRY_DSN
                              value: ${SENTRY_DSN}
                            - name: DATABASE_HOST
                              value: ${DATABASE_HOST}
                            - name: DATABASE_USER
                              value: ${DATABASE_USER}
                            - name: DATABASE_PASSWORD
                              value: ${DATABASE_PASSWORD}
                            - name: TIDEWAYS_API_KEY
                              value: ${TIDEWAYS_API_KEY}
                            - name: BITBUCKET_OAUTH_KEY
                              value: ${BITBUCKET_OAUTH_KEY}
                            - name: BITBUCKET_OAUTH_SECRET
                              value: ${BITBUCKET_OAUTH_SECRET}
                            - name: AUTHENTICATOR_API_KEY
                              value: ${AUTHENTICATOR_API_KEY}
                            - name: ADMIN_PASSWORD
                              value: ${ADMIN_PASSWORD}
                            - name: HOSTED_GRAPHITE_API_KEY
                              value: ${HOSTED_GRAPHITE_API_KEY}
                            - name: K8S_WATCHER_URL
                              value: http://api.k8s-watcher-master.svc.cluster.local
                            - name: K8S_HEALTH_CHECKER_URL
                              value: http://health-checker.chc-master.svc.cluster.local
                            - name: ZIPKIN_BASE_URL
                              value: http://zipkin.zipkin-master.svc.cluster.local:9411
                            - name: APP_USER_LOCAL
                              value: false
                            - name: STACK_RABBITMQ_HOST
                              value: ${STACK_RABBITMQ_HOST}
                            - name: HOSTED_GRAPHITE_API_KEY
                              value: ${HOSTED_GRAPHITE_API_KEY}
                            - name: GITHUB_SECRET
                              value: ${GITHUB_SECRET}
                            - name: GITHUB_INTEGRATION_ID
                              value: ${GITHUB_INTEGRATION_ID}
                            - name: GITHUB_INTEGRATION_KEY_NAME
                              value: ${GITHUB_INTEGRATION_KEY_NAME}
                            - name: GOOGLE_PUB_SUB_TOPIC
                              value: ${GOOGLE_PUB_SUB_TOPIC}
                            - name: GOOGLE_PUB_SUB_SUBSCRIPTION_NAME
                              value: ${GOOGLE_PUB_SUB_SUBSCRIPTION_NAME}
                            - name: LOGITIO_API_KEY
                              value: ${LOGITIO_API_KEY}
                            - name: FLEX_CLUSTER_ADDRESS
                              value: ${FLEX_CLUSTER_ADDRESS}

                    deployment_strategy:
                        readiness_probe:
                            type: http
                            port: 80
                            path: /

                worker:
                    specification:
                        accessibility:
                            from_cluster: false
                        source:
                            from_service: api
                        environment_variables:
                            <<: *ENV
                            1000:
                              name: START_NGINX
                              value: 'false'
                            1001:
                              name: START_PHP_FPM
                              value: 'false'
                            1002:
                              name: START_WORKER
                              value: 'true'

                tideways:
                    specification:
                        resources:
                            limits:
                                cpu: 50m
                                memory: 100Mi

                redis:
                    deployment_strategy:
                        readiness_probe:
                            type: tcp
                            port: 6379

                    specification:
                        resources:
                            requests:
                                cpu: 50m
                                memory: 100Mi
                            limits:
                                cpu: 250m
                                memory: 250Mi

                cron:
                    specification:
                        source:
                            from_service: api

                        environment_variables:
                            <<: *ENV
                            1000:
                              name: START_NGINX
                              value: 'false'
                            1001:
                              name: START_PHP_FPM
                              value: 'false'
                            1002:
                              name: START_CRON
                              value: 'true'

                        accessibility:
                            from_cluster: false

                eventstore:
                    specification:
                        volumes:
                            - type: persistent
                              name: eventstore-volume
                              capacity: 5Gi
                              storage_class: default

                        volume_mounts:
                            - name: eventstore-volume
                              mount_path: /var/lib/eventstore

                        resources:
                            requests:
                                cpu: 50m
                                memory: 150Mi

                    deployment_strategy:
                        readiness_probe:
                            type: tcp
                            port: 2113

    migrations:
        run:
            cluster: ${CLUSTER}
            environment:
                name: '"river-" ~ code_reference.branch'
            image:
                from_service: api
            commands:
                - composer run-script update-parameters
                - php app/console doctrine:migrations:migrate --no-interaction

            environment_variables:
                <<: *ENV

notifications:
    inviqa_slack:
        slack:
            webhook_url: https://hooks.slack.com/services/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
