<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="api.controller.user" class="ApiBundle\Controller\System\UserController" />
        <service id="api.controller.user_github_credentials" class="ApiBundle\Controller\System\UserGitHubCredentialsController" />
        <service id="api.controller.user_docker_registry_credentials" class="ApiBundle\Controller\System\UserDockerRegistryCredentialsController">
            <argument type="service" id="app.repository.docker_registry_credentials" />
        </service>
        <service id="api.controller.credentials_bucket" class="ApiBundle\Controller\CredentialsBucketController">
            <argument type="service" id="app.repository.credentials_bucket" />
            <argument type="service" id="validator" />
        </service>
        <service id="api.controller.team" class="ApiBundle\Controller\TeamController">
            <argument type="service" id="app.repository.team" />
            <argument type="service" id="app.repository.team_membership" />
        </service>

        <!-- Param Converter -->
        <service id="request.param_converter.team" class="ContinuousPipe\Security\Request\ParamConverter\TeamParamConverter">
            <argument type="service" id="app.repository.team" />

            <tag name="request.param_converter" converter="team" />
        </service>
        <service id="request.param_converter.bucket" class="ContinuousPipe\Security\Request\ParamConverter\BucketParamConverter">
            <argument type="service" id="app.repository.credentials_bucket" />

            <tag name="request.param_converter" converter="bucket" />
        </service>

        <!-- Security Voter -->
        <service id="security.access.team_voter"
                 class="ContinuousPipe\Security\Voter\TeamPermissionVoter"
                 public="false">
            <argument type="service" id="app.repository.team_membership" />
            <tag name="security.voter" />
        </service>
        <service id="security.access.bucket_voter"
                 class="ContinuousPipe\Security\Voter\BucketPermissionVoter"
                 public="false">
            <argument type="service" id="app.repository.team_membership" />
            <tag name="security.voter" />
        </service>
    </services>
</container>
