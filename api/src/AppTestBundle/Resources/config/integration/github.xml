<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="repository_river.code_repository_repository" class="ContinuousPipe\River\Tests\CodeRepository\InMemoryCodeRepositoryRepository" />
        <service id="repository_river.organisation_repository" class="ContinuousPipe\River\Tests\CodeRepository\InMemoryOrganisationRepository" />
        <service id="repository_river.github.webhook_manager" class="ContinuousPipe\River\Tests\CodeRepository\GitHub\FakeWebHookManager" />
        <service id="river.github.pull_request_resolver" class="ContinuousPipe\River\Tests\CodeRepository\GitHub\FakePullRequestResolver" />
        <service id="river.github.http_client" class="ContinuousPipe\River\Tests\CodeRepository\GitHub\TestHttpClient" />
        <service id="river.github.client_factory" class="ContinuousPipe\River\Tests\CodeRepository\GitHub\TestClientFactory">
            <argument type="service" id="river.github.http_client" />
        </service>
        <service id="github.integration.installation_token_resolver.in_memory" class="GitHub\Integration\InMemoryInstallationTokenResolver" />

        <service id="github.integration.in_memory_installation_repository" class="GitHub\Integration\InMemoryInstallationRepository" />
        <service id="github.integration.installation_repository" alias="github.integration.in_memory_installation_repository" />
        <service id="github.integration.installation_token_resolver" alias="github.integration.installation_token_resolver.in_memory" />
        <service id="river.github.file_system_resolver.fake" class="ContinuousPipe\River\Tests\CodeRepository\FakeFileSystemResolver" />
        <service id="river.github.file_system_resolver" alias="river.github.file_system_resolver.fake" />

        <service id="river.github.guzzle_http_client.handler.matching" class="ContinuousPipe\River\Guzzle\MatchingHandler">
            <argument type="service" id="logger" />
        </service>
        <service id="river.github.guzzle_http_client.handler"
                 class="GuzzleHttp\HandlerStack">
            <factory class="GuzzleHttp\HandlerStack" method="create" />

            <argument type="service" id="river.github.guzzle_http_client.handler.matching" />
        </service>
    </services>
</container>
