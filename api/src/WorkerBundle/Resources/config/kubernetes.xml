<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <!-- ContinuousPipe to Kubernetes transformer -->
        <service id="kubernetes.naming_strategy.identifier" class="ContinuousPipe\Adapter\Kubernetes\Naming\IdentifierNamingStrategy" />
        <service id="kubernetes.transformer.volume" class="ContinuousPipe\Adapter\Kubernetes\Transformer\VolumeTransformer" />
        <service id="kubernetes.transformer.pod" class="ContinuousPipe\Adapter\Kubernetes\Transformer\PodTransformer">
            <argument type="service" id="kubernetes.naming_strategy.identifier" />
            <argument type="service" id="kubernetes.transformer.volume" />
        </service>
        <service id="kubernetes.transformer.service" class="ContinuousPipe\Adapter\Kubernetes\Transformer\ServiceTransformer">
            <argument type="service" id="kubernetes.naming_strategy.identifier" />
        </service>
        <service id="kubernetes.transformer.replication_controller_factory" class="ContinuousPipe\Adapter\Kubernetes\Transformer\ReplicationControllerFactory" />
        <service id="kubernetes.transformer.component" class="ContinuousPipe\Adapter\Kubernetes\Transformer\ComponentTransformer">
            <argument type="service" id="kubernetes.transformer.pod" />
            <argument type="service" id="kubernetes.transformer.service" />
            <argument type="service" id="kubernetes.transformer.replication_controller_factory" />
        </service>
        <service id="kubernetes.transformer.environment" class="ContinuousPipe\Adapter\Kubernetes\Transformer\EnvironmentTransformer">
            <argument type="service" id="kubernetes.transformer.component" />
        </service>
        <service id="kubernetes.public_endpoint.public_service_voter" class="ContinuousPipe\Adapter\Kubernetes\PublicEndpoint\PublicServiceVoter" />

        <!-- Kubernetes client -->
        <service id="pipe.adapter.kubernetes.guzzle_client" class="GuzzleHttp\Client">
            <argument type="collection">
                <argument key="defaults" type="collection">
                    <argument key="verify">false</argument>
                </argument>
            </argument>

            <tag name="csa_guzzle.client" />
        </service>
        <service id="pipe.adapter.kubernetes.client_factory" class="ContinuousPipe\Adapter\Kubernetes\Client\HttpClientFactory">
            <argument type="service" id="jms_serializer" />
            <argument type="service" id="pipe.adapter.kubernetes.guzzle_client" />
        </service>
        <service id="pipe.adapter.kubernetes.environment_client_factory" class="ContinuousPipe\Adapter\Kubernetes\KubernetesEnvironmentClientFactory">
            <argument type="service" id="pipe.adapter.kubernetes.client_factory" />
            <argument type="service" id="kubernetes.transformer.environment" />
            <argument type="service" id="log_stream.logger_factory" />
            <argument type="service" id="event_bus" />
        </service>
        <service id="pipe.adapter.kubernetes.repository" class="ContinuousPipe\Adapter\Kubernetes\Repository">
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>
        <service id="pipe.adapter.kubernetes" class="ContinuousPipe\Adapter\Kubernetes\KubernetesAdapter">
            <argument type="service" id="pipe.adapter.kubernetes.repository" />
            <argument type="service" id="pipe.adapter.kubernetes.environment_client_factory" />

            <tag name="pipe.adapter" />
        </service>
        <service id="pipe.adapter.kubernetes.deployment_client_factory" class="ContinuousPipe\Adapter\Kubernetes\Client\DeploymentClientFactory">
            <argument type="service" id="pipe.adapter.kubernetes.client_factory" />
        </service>
        <service id="pipe.adapter.kubernetes.service_waiter" class="ContinuousPipe\Adapter\Kubernetes\PublicEndpoint\LoopServiceWaiter">
            <argument type="service" id="pipe.adapter.kubernetes.deployment_client_factory" />
            <argument type="service" id="log_stream.logger_factory" />
        </service>

        <!-- Listeners -->
        <service id="pipe.adapter.kubernetes.primate_images.docker_cfg_file_generator" class="ContinuousPipe\Adapter\Kubernetes\PrivateImages\DockerCfgFileGenerator" />
        <service id="pipe.adapter.kubernetes.private_images.secret_factory" class="ContinuousPipe\Adapter\Kubernetes\PrivateImages\SecretFactory">
            <argument type="service" id="security.authenticator.client" />
            <argument type="service" id="pipe.adapter.kubernetes.primate_images.docker_cfg_file_generator" />
        </service>
        <service id="pipe.adapter.kubernetes.listener.add_private_registry_credentials" class="ContinuousPipe\Adapter\Kubernetes\Listener\NamespaceCreated\AddPrivateRegistryCredentials">
            <argument type="service" id="pipe.adapter.kubernetes.client_factory" />
            <argument type="service" id="pipe.adapter.kubernetes.private_images.secret_factory" />
            <argument type="service" id="log_stream.logger_factory" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Adapter\Kubernetes\Event\NamespaceCreated" />
        </service>
        <service id="pipe.adapter.kubernetes.listener.wait_public_services" class="ContinuousPipe\Adapter\Kubernetes\Listener\PublicServicesCreated\WaitPublicServicesEndpoints">
            <argument type="service" id="event_bus" />
            <argument type="service" id="pipe.adapter.kubernetes.service_waiter" />
            <argument type="service" id="log_stream.logger_factory" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Adapter\Kubernetes\Event\PublicServicesCreated" />
        </service>

        <!-- Handlers -->
        <service id="pipe.adapter.kubernetes.prepare_environment_handler" class="ContinuousPipe\Adapter\Kubernetes\Handler\PrepareEnvironmentHandler">
            <argument type="service" id="pipe.adapter.kubernetes.client_factory" />
            <argument type="service" id="event_bus" />
            <argument type="service" id="log_stream.logger_factory" />

            <tag name="deployment_command_handler" handles="ContinuousPipe\Pipe\Command\PrepareEnvironmentCommand" />
        </service>
        <service id="pipe.adapter.kubernetes.create_public_endpoints" class="ContinuousPipe\Adapter\Kubernetes\Handler\CreatePublicEndpointsHandler">
            <argument type="service" id="kubernetes.transformer.environment" />
            <argument type="service" id="pipe.adapter.kubernetes.deployment_client_factory" />
            <argument type="service" id="event_bus" />
            <argument type="service" id="log_stream.logger_factory" />
            <argument type="service" id="kubernetes.public_endpoint.public_service_voter" />

            <tag name="deployment_command_handler" handles="ContinuousPipe\Pipe\Command\CreatePublicEndpointsCommand" />
        </service>
        <service id="pipe.adapter.kubernetes.create_components_handler" class="ContinuousPipe\Adapter\Kubernetes\Handler\CreateComponentsHandler">
            <argument type="service" id="kubernetes.transformer.component" />
            <argument type="service" id="pipe.adapter.kubernetes.deployment_client_factory" />
            <argument type="service" id="event_bus" />
            <argument type="service" id="log_stream.logger_factory" />

            <tag name="deployment_command_handler" handles="ContinuousPipe\Pipe\Command\CreateComponentsCommand" />
        </service>
    </services>
</container>
