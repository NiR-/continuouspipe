<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <!-- Handlers -->
        <service id="builder.start_build_handler" class="ContinuousPipe\Builder\Handler\StartBuildHandler">
            <argument type="service" id="builder.build_repository" />
            <argument type="service" id="builder.build_logger_factory" />
            <argument type="service" id="command_bus" />

            <tag name="asynchronous_command_handler" handles="ContinuousPipe\Builder\Command\StartBuildCommand"/>
        </service>

        <service id="builder.build_image_handler" class="ContinuousPipe\Builder\Handler\BuildImageHandler">
            <argument type="service" id="builder.builder" />
            <argument type="service" id="event_bus" />

            <tag name="command_handler" handles="ContinuousPipe\Builder\Command\BuildImageCommand"/>
        </service>

        <service id="builder.push_image_handler" class="ContinuousPipe\Builder\Handler\PushImageHandler">
            <argument type="service" id="builder.builder" />
            <argument type="service" id="event_bus" />

            <tag name="command_handler" handles="ContinuousPipe\Builder\Command\PushImageCommand"/>
        </service>

        <!-- Listeners -->
        <service id="builder.listener.push_build_image" class="ContinuousPipe\Builder\EventListener\ImageBuilt\PushBuiltImageListener">
            <argument type="service" id="command_bus" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Event\ImageBuilt" />
        </service>
        <service id="builder.listener.build_successful_after_push" class="ContinuousPipe\Builder\EventListener\ImagePushed\BuildIsSuccessfulAfterImagePushed">
            <argument type="service" id="event_bus" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Event\ImagePushed" />
        </service>

        <service id="builder.listener.notification_when_finished" class="ContinuousPipe\Builder\EventListener\SendNotificationWhenBuildFinishes">
            <argument type="service" id="builder.notifier" />
            <argument type="service" id="builder.build_repository" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Event\BuildFailed" />
            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Event\BuildSuccessful" />
        </service>
    </services>
</container>
