<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="builder.docker.logged_client"
                 class="ContinuousPipe\Builder\Logging\Docker\LoggedDockerClient"
                 decorates="builder.docker.client">
            <argument type="service" id="builder.docker.logged_client.inner" />
            <argument type="service" id="log_stream.logger_factory" />
        </service>

        <service id="builder.logging.display_the_steps_errors" class="ContinuousPipe\Builder\Logging\DisplayTheErrors">
            <argument type="service" id="log_stream.logger_factory" />
            <argument type="service" id="logger" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Aggregate\BuildStep\Event\StepFailed" />
        </service>

        <service id="builder.reporting.builder" class="ContinuousPipe\Builder\Reporting\BuildReportFromAggregate">
            <argument type="service" id="builder.build.repository" />
        </service>
        <service id="builder.reporting.builder.add_durations"
                 class="ContinuousPipe\Builder\Reporting\AddsDurationFromEvents"
                 decorates="builder.reporting.builder">
            <argument type="service" id="builder.reporting.builder.add_durations.inner" />
            <argument type="service" id="builder.event_store" />
            <argument type="service" id="logger" />
        </service>
        <service id="builder.reporting.publisher" class="ContinuousPipe\Builder\Reporting\ElasticSearch\ElasticSearchReportPublisher">

        </service>

        <service id="builder.reporting.publish_on_events" class="ContinuousPipe\Builder\Reporting\OnBuildEvent\PublishReportOnBuildEvent">
            <argument type="service" id="builder.reporting.builder" />
            <argument type="service" id="builder.reporting.publisher" />
            <argument type="service" id="logger"/>

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Aggregate\Event\BuildCreated" />
            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Aggregate\Event\BuildStarted" />
            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Aggregate\Event\BuildFailed" />
            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Aggregate\Event\BuildFinished" />
        </service>
    </services>
</container>
