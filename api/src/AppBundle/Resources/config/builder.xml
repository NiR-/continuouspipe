<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="river.builder_client" alias="builder.client" />

        <service id="builder.build_request_source_resolver" class="ContinuousPipe\River\CodeRepository\ThroughRiverArchiveProxySourceResolver">
            <argument type="service" id="logger" />
            <argument type="service" id="router" />
            <argument type="service" id="lexik_jwt_authentication.jwt_manager" />
            <argument>%river_host%</argument>
        </service>

        <service id="builder.build_request_creator" class="ContinuousPipe\Builder\WithSourceAndNotificationsBuildRequestCreator">
            <argument type="service" id="logger" />
            <argument type="service" id="builder.build_request_source_resolver" />
        </service>

        <service id="builder.build_request_creator.guess_registry_details"
                 class="ContinuousPipe\Builder\GuessUserRegistryAndUsername"
                 decorates="builder.build_request_creator">
            <argument type="service" id="builder.build_request_creator.guess_registry_details.inner" />
            <argument type="service" id="app.repository.credentials_bucket" />
            <argument type="service" id="logger" />
            <argument type="service" id="river.resources.reference_docker_registry_resolver"/>
        </service>

        <service id="river.builder_bridge.handler.report_completion" class="ContinuousPipe\River\Bridge\Builder\Handler\ReportImageBuildCompletionToAggregate">
            <argument type="service" id="river.tide.transaction_manager" />
            <argument type="service" id="builder.view.build_repository" />

            <tag name="command_handler" handles="ContinuousPipe\River\Bridge\Builder\Command\ReportImageBuildCompletion" />
        </service>

        <service id="river.builder_bridge.listen_for_status" class="ContinuousPipe\River\Bridge\Builder\ListenForBuildStatus" public="true">
            <argument type="service" id="command_bus" />
            <argument type="service" id="builder.view.build_repository" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Aggregate\Event\BuildFailed" />
            <tag name="event_subscriber" subscribes_to="ContinuousPipe\Builder\Aggregate\Event\BuildFinished" />
        </service>
    </services>
</container>
