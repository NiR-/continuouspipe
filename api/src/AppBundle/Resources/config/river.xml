<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="river.repository.tide" class="ContinuousPipe\River\Repository\EventBusTideRepository">
            <argument type="service" id="river.event_store" />
        </service>

        <!-- Command handlers -->
        <service id="river.handler.start_tide" class="ContinuousPipe\River\Handler\StartTideHandler">
            <argument type="service" id="simple_bus.event_bus" />
            <tag name="command_handler" handles="ContinuousPipe\River\Command\StartTideCommand" />
        </service>
        <service id="river.handler.build_image" class="ContinuousPipe\River\Handler\BuildImageHandler">
            <argument type="service" id="builder.client" />
            <argument type="service" id="river.repository.tide" />
            <argument type="service" id="simple_bus.event_bus" />
            <argument type="service" id="router" />
            <argument type="service" id="log_stream.logger_factory" />

            <tag name="command_handler" handles="ContinuousPipe\River\Command\BuildImageCommand" />
        </service>
        <service id="river.handler.build_images" class="ContinuousPipe\River\Handler\BuildImagesHandler">
            <argument type="service" id="simple_bus.command_bus" />
            <argument type="service" id="simple_bus.event_bus" />
            <argument type="service" id="river.repository.tide" />
            <argument type="service" id="builder.build_request_creator" />
            <argument type="service" id="log_stream.logger_factory" />

            <tag name="command_handler" handles="ContinuousPipe\River\Command\BuildImagesCommand" />
        </service>

        <!-- Event subscribers -->
        <service id="river.listener.code_pushed" class="ContinuousPipe\River\EventListener\External\CodePushedListener">
            <argument type="service" id="simple_bus.command_bus" />
            <argument type="service" id="river.repository.flow" />
            <argument type="service" id="log_stream.logger_factory" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\River\Event\External\CodePushedEvent"/>
        </service>
        <service id="river.listener.tide_started" class="ContinuousPipe\River\EventListener\TideStartedListener">
            <argument type="service" id="simple_bus.command_bus" />
            <argument type="service" id="river.repository.tide" />
            <argument type="service" id="log_stream.logger_factory" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\River\Event\TideStarted"/>
        </service>
    </services>
</container>
