<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="repository_river.github.request.github_request_param_converter" class="GitHub\WebHook\Request\ParamConverter\GitHubRequestConverter">
            <argument type="service" id="repository_river.github.request_validator" />
            <argument type="service" id="repository_river.github.request_deserializer" />
            <tag name="request.param_converter" converter="githubRequest" />
        </service>

        <service id="repository_river.github.request_validator" class="GitHub\WebHook\Security\RequestValidator">
            <argument>%github_secret%</argument>
        </service>

        <service id="repository_river.github.default_class_event_mapping" class="GitHub\WebHook\DefaultEventClassMapping" />

        <service id="repository_river.github.request_deserializer" class="GitHub\WebHook\RequestDeserializer">
            <argument type="service" id="jms_serializer" />
            <argument type="service" id="repository_river.github.default_class_event_mapping" />
        </service>

        <service id="repository_river.code_repository_repository" class="ContinuousPipe\River\CodeRepository\GitHub\GitHubCodeRepositoryRepository">
            <argument type="service" id="river.github.client_factory" />
            <argument type="service" id="jms_serializer" />
        </service>
        <service id="repository_river.organisation_repository" class="ContinuousPipe\River\CodeRepository\GitHub\GitHubOrganisationRepository">
            <argument type="service" id="river.github.client_factory" />
            <argument type="service" id="jms_serializer" />
        </service>

        <service id="repository_river.github.client" class="GitHub\Client">
            <factory service="river.github.client_factory" method="createClientForCurrentUser" />
        </service>
        <service id="repository_river.github.webhook_manager" class="GitHub\WebHook\Setup\HttpWebHookManager">
            <argument type="service" id="repository_river.github.client" />
            <argument type="service" id="jms_serializer" />
        </service>

        <service id="river.github.guzzle_http_client" class="GitHub\WebHook\Guzzle\DefaultGuzzleClient">
            <tag name="csa_guzzle.client" />
        </service>
        <service id="river.github.http_client" class="GitHub\WebHook\Guzzle\Guzzle4HttpClient">
            <argument type="service" id="river.github.guzzle_http_client" />
        </service>
        <service id="river.github.client_factory" class="ContinuousPipe\River\GitHub\GitHubClientFactory">
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="river.github.http_client" />
            <argument type="service" id="authenticator.bucket_repository" />
        </service>

        <service id="river.github.repository_address_descriptor" class="ContinuousPipe\River\CodeRepository\RepositoryAddressDescriptor" />

        <service id="river.github.pull_request_deployment_notifier" class="ContinuousPipe\River\CodeRepository\GitHub\CommentPullRequestDeploymentNotifier">
            <argument type="service" id="river.github.client_factory" />
        </service>
        <service id="river.github.code_reference_resolver" class="ContinuousPipe\River\CodeRepository\GitHub\CodeReferenceResolver" />
        <service id="river.github.web_hook_handler" class="ContinuousPipe\River\CodeRepository\GitHub\WebHookHandler">
            <argument type="service" id="river.tide_factory" />
            <argument type="service" id="river.github.code_reference_resolver" />
            <argument type="service" id="event_bus" />
            <argument type="service" id="river.view.tide_repository" />
        </service>

        <service id="river.github.pull_request_resolver" class="ContinuousPipe\River\CodeRepository\GitHub\DeploymentNotification\GitHubPullRequestResolver">
            <argument type="service" id="river.github.client_factory" />
            <argument type="service" id="jms_serializer" />
        </service>
        <service id="river.github.notification.deployment_successful_listener" class="ContinuousPipe\River\CodeRepository\GitHub\DeploymentNotification\DeploymentSuccessfulListener">
            <argument type="service" id="river.github.pull_request_resolver" />
            <argument type="service" id="river.view.tide_repository" />
            <argument type="service" id="river.github.pull_request_deployment_notifier" />
            <argument type="service" id="authenticator.bucket_repository" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\River\Task\Deploy\Event\DeploymentSuccessful"/>
        </service>
        <service id="river.commit_resolver" class="ContinuousPipe\River\CodeRepository\GitHub\GitHubCommitResolver">
            <argument type="service" id="river.github.client_factory" />
            <argument type="service" id="river.github.repository_address_descriptor" />
        </service>

        <service id="river.listener.github.pull_request.comment_deployment_environment_endpoints" class="ContinuousPipe\River\EventListener\GitHub\PullRequestOpened\CommentDeploymentEnvironmentEndpoints">
            <argument type="service" id="river.view.tide_repository" />
            <argument type="service" id="river.github.pull_request_deployment_notifier" />
            <argument type="service" id="river.event_store" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\River\Event\GitHub\PullRequestOpened"/>
        </service>

        <service id="river.listener.github.pull_request.delete_related_environment" class="ContinuousPipe\River\EventListener\GitHub\PullRequestClosed\DeleteRelatedEnvironment">
            <argument type="service" id="river.pipe_client" />
            <argument type="service" id="river.view.tide_repository" />
            <argument type="service" id="river.task.deploy.naming.environment_strategy" />
            <argument type="service" id="river.pipe.cluster_identifier_resolver" />
            <argument type="service" id="logger" />

            <tag name="event_subscriber" subscribes_to="ContinuousPipe\River\Event\GitHub\PullRequestClosed"/>
        </service>
    </services>
</container>
