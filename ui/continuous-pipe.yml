pipelines:
    - name: Staging
      condition: code_reference.branch == 'master'
      tasks: [ images, deployment ]
    - name: Production
      condition: code_reference.branch == 'production'
      tasks: [ images, deployment ]
    - name: Pull-requests
      condition: code_reference.branch not in ['master', 'production']
      tasks: [ images, deployment ]

variables:
    - name: AUTHENTICATOR_API_URL
      condition: code_reference.branch == 'production'
      value: https://authenticator.continuouspipe.io
    - name: RIVER_API_URL
      condition: code_reference.branch == 'production'
      value: https://river.continuouspipe.io
    - name: KUBE_PROXY_HOSTNAME
      value: kube-proxy.continuouspipe.io
      condition: code_reference.branch == 'production'
    - name: UI_HOSTNAME
      value: ui.continuouspipe.io
      condition: code_reference.branch == 'production'

    - name: AUTHENTICATOR_API_URL
      condition: code_reference.branch != 'production'
      value: https://authenticator-staging.continuouspipe.io
    - name: RIVER_API_URL
      condition: code_reference.branch != 'production'
      value: https://river-staging.continuouspipe.io
    - name: KUBE_PROXY_HOSTNAME
      value: kube-proxy-staging.continuouspipe.io
      condition: code_reference.branch != 'production'
      
    - name: UI_HOSTNAME
      value: ui-staging.continuouspipe.io
      condition: code_reference.branch == 'master'
tasks:
    images:
        build:
            services:
                ui:
                    image: inviqasession/cp-river-ui

    deployment:
        deploy:
            cluster: ${CLUSTER}
            environment:
                name: '"ui-" ~ code_reference.branch'

            services:
                ui:
                    endpoints:
                        - name: dev
                          ingress:
                              class: nginx
                              host_suffix: '-ui-dev.continuouspipe.io'
                          cloud_flare_zone: { zone_identifier: '${CLOUD_FLARE_ZONE}', proxied: true, authentication: { email: '${CLOUD_FLARE_EMAIL}', api_key: '${CLOUD_FLARE_API_KEY}' } }
                          ssl_certificates: [{ name: auto, cert: automatic, key: automatic }]
                        - name: stable
                          ingress:
                              class: nginx
                              host: ${UI_HOSTNAME}
                          condition: 'code_reference.branch in ["production", "master"]'
                          ssl_certificates: [{ name: auto, cert: automatic, key: automatic }]

                    specification:
                        environment_variables:
                            - name: AUTHENTICATOR_API_URL
                              value: ${AUTHENTICATOR_API_URL}
                            - name: LOG_STREAM_URL
                              value: https://logstream.continuouspipe.io
                            - name: PIPE_API_URL
                              value: https://pipe.continuouspipe.io
                            - name: RIVER_API_URL
                              value: ${RIVER_API_URL}
                            - name: SENTRY_DSN
                              value: ${SENTRY_DSN}
                            - name: KUBE_PROXY_HOSTNAME
                              value: ${KUBE_PROXY_HOSTNAME}
                            - name: KUBE_STATUS_API_URL
                              value: ${AUTHENTICATOR_API_URL}/api/kube-status
